@inject Biblioteca.Web.Data.ILendRepository _lendRepository

@model Biblioteca.Web.Data.Entities.Book
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@*@if (this.User.Identity.IsAuthenticated)
{
    <a href="@Model.BookPdfUrl" class="btn btn-primary" target="_blank">Read the Book</a>
}
else
{
    <p>This book is not available for reading.</p>
}*@

@if (this.User.Identity.IsAuthenticated)
{
    // Check if the user has made any lends
    var hasLends = await _lendRepository.UserHasLentBookAsync(User.Identity.Name, Model.Id);

    @if (hasLends)
    {
        <a href="@Model.BookPdfUrl" class="btn btn-primary" target="_blank">Read the Book</a>
    }
    else
    {
        <p>You need to borrow a book before you can read this one.</p>
    }
}
else
{
    <p>This book is not available for reading.</p>
}


<div>
    <hr />
    <div class="row">
        <div class="col-md-8">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Borrower)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Borrower)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Author)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Author)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.GenreName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.GenreName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Id)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Id)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ISBN)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ISBN)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Publisher)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Publisher)
                </dd>
                <dt class="col-sm-2">
                    Availability
                </dt>
                <dd class="col-sm-10">
                    @if (Model.IsAvailable)
                    {
                        <span class="badge badge-success">Available</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">Not Available</span>
                    }
                </dd>
                <dt class="col-sm-2">
                    Available:
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.AvailableCopies)
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <img src="@Url.Content(Model.ImageFullPath)" alt="Image" style="width:300px; height:450px; max-width:100%; height:auto">
        </div>
    </div>
</div>
<div>
    @if (this.User.Identity.IsAuthenticated && (this.User.IsInRole("Admin") || this.User.IsInRole("Staff")))
    {
        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Edit</button>

    }
    <a asp-action="Index" class="btn btn-success"><i class="fa fa-chevron-left"></i> Back to List</a>
</div>
