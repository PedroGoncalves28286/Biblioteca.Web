@model IEnumerable<Biblioteca.Web.Data.Entities.Book>

@{
    ViewData["Title"] = "Index";
}

@if (this.User.Identity.IsAuthenticated && (this.User.IsInRole("Admin") || this.User.IsInRole("Staff") || this.User.IsInRole("Reader")))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Add Book</a>
    </p>
}

@using(Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <div class="input-group">
        @Html.TextBox("search", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by title, author, genre, ISBN, publisher, or book ID" })
        <div class="input-group-append">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>
}
<div class="book-list">
    @foreach (var item in Model)
    {
        <div class="book-item">
            <div class="book-cover-container">
                <img src="@Url.Content(item.ImageFullPath)" alt="Book Cover" class="book-cover">
            </div>
            <div class="book-info">
                <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                <p><strong>Author:</strong> @Html.DisplayFor(modelItem => item.Author)</p>
                <p><strong>Genre:</strong> @Html.DisplayFor(modelItem => item.GenreName)</p>
                <p><strong>ISBN:</strong> @Html.DisplayFor(modelItem => item.ISBN)</p>
                <p><strong>Publisher:</strong> @Html.DisplayFor(modelItem => item.Publisher)</p>
                <p>
                    @if (item.IsAvailable)
                    {
                        <span class="badge badge-success">Available</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">Not Available</span>
                    }
                </p>
                <p><strong>Available Copies:</strong> @Html.DisplayFor(modelItem => item.AvailableCopies)</p>
                @if (this.User.Identity.IsAuthenticated && (this.User.IsInRole("Admin") || this.User.IsInRole("Staff")))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                }
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Admin"))
                {
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                }
            </div>
        </div>
    }
</div>

<style>
    .book-list {
        margin: 15px;
        padding: 15px;
    }

    .book-item {
        display: flex;
        margin-bottom: 15px;
    }

    .book-cover-container {
        width: 150px;
        height: 150px; /* Make it a square */
        margin-right: 15px;
        border-radius: 50%; /* Rounded corners make it a circle */
        overflow: hidden; /* Hide overflowing content */
    }

    .book-cover {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Maintain aspect ratio while covering the circle */
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-danger {
        background-color: #dc3545;
    }
</style>
