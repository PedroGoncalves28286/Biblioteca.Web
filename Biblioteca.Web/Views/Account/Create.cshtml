@model Biblioteca.Web.Models.CreateUserViewModel
@{
    ViewData["Title"] = "Create";
}

@if (TempData["EmailConfirmationMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["EmailConfirmationMessage"]
    </div>
}


<h1>Create</h1>

<div class="row">
    <div class="col-md-4 offset-md-4">
        @using (Html.BeginForm("Create", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username)
                @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword)
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                <label asp-for="CityId" class="control-label"></label>
                <select asp-for="CityId" asp-items="Model.Cities" class="form-control"></select>
                <span asp-validation-for="CityId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="LibraryId" class="control-label"></label>
                <select asp-for="LibraryId" asp-items="Model.Libraries" class="form-control"></select>
                <span asp-validation-for="LibraryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Address">Address</label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-warning"></span>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedRole)
                @Html.DropDownListFor(model => model.SelectedRole, (SelectList)ViewBag.Roles, "Select a role", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-warning" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fa-solid fa-plus fa-beat"></i> Create User
                </button>
                <a asp-action="Index" asp-controller="Home" class="btn btn-success"><i class="fa fa-chevron-left"></i> Back to Home</a>
            </div>

        }
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {
            $("#CityId").change(function () {
                $("#LibraryId").empty();
                $.ajax({
                    url: '@Url.Action("GetLibrariesAsync", "Account")',
                    type: 'POST',
                    datatype: 'json',
                    data: { cityId: $("#CityId").val() },
                    success: function (libraries) {
                        debugger;
                        $("#LibraryId").append('<option value="0">(Select a library...)</option>');
                        $.each(libraries, function (i, library) {
                            $("#LibraryId").append('<option value="'
                                + library.id + '">'
                                + library.name + '</option>');
                        });
                    },
                    error: function (ex) {
                        debugger;
                        alert('Failed to retrieve libraries' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}